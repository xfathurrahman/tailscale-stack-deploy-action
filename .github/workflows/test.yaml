name: "Test Workflow"

env:
  UBUNTU_VERSION: "ubuntu-22.04"
  CHECKOUT_ACTION: "actions/checkout@v4"
  TAILSCALE_ACTION: "tailscale/github-action@v3"
  YAML_ACTION: "teunmooij/yaml@v1"
  SHELLCHECK_ACTION: "ludeeus/action-shellcheck@master"

on:
  workflow_dispatch:

jobs:
  test:
    name: "Test ðŸ§ª"
    runs-on: ${{ env.UBUNTU_VERSION }}
    timeout-minutes: 5
    steps:
      - name: "Checkout Repository"
        uses: ${{ env.CHECKOUT_ACTION }}

      - name: "Write Docker Compose YAML"
        id: yaml-action
        uses: ${{ env.YAML_ACTION }}
        with:
          data: '{"version":"3.8","services":{"alpine":{"image":"alpine","command":"tail -f /dev/null"}}}'
          to-file: "docker-compose.yaml"

      - name: "Setup Tailscale VPN"
        id: setup-tailscale
        uses: ${{ env.TAILSCALE_ACTION }}
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: "Create .env File"
        run: echo "GIT_COMMIT_HASH=${{ github.sha }}" > ./envfile

      - name: "Test Local Action"
        id: test-local
        uses: ./
        with:
          tailscale_host:  ${{ secrets.TS_HOST }}
          docker_port: "2375"
          compose_file: "docker-compose.yaml"
          stack_name: "test-stack"
          env_file: "./envfile"
          custom_command: "--detach=false"

  lint:
    name: "Lint âœ¨"
    runs-on: ${{ env.UBUNTU_VERSION }}
    timeout-minutes: 5
    steps:
      - name: "Checkout Repository"
        uses: ${{ env.CHECKOUT_ACTION }}

      - name: "Lint Shell Scripts"
        uses: ${{ env.SHELLCHECK_ACTION }}
        with:
          scandir: src